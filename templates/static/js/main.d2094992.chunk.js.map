{"version":3,"sources":["logo.png","Logo.js","Dataset.js","Recipe.js","Results.js","404Error.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","react_default","a","createElement","style","width","href","src","require","alt","height","this","props","display","margin","Component","Dataset","callback","$","getJSON","data","id","recipeAPI","incIngredients","excIngredients","diet","allergies","matchType","queryObject","ing","length","ingexc","allergy","match","queryRecipesWithObject","queryString","qs","arrayFormat","recipesAPI","Rating","rating","index","Math","round","StatBox","className","heading","value","Recipe","_Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","calories","categories","directions","fat","ingredients","protein","sodium","title","inherits","createClass","key","_this2","getRecipe","setState","directionItems","map","direction","ingredientItems","ingredient","paddingLeft","StatFilterCard","name","type","onChange","unit","Card","border","onClick","window","location","percentage","required","Results","createCards","cards","results","recipe","toString","unmatched","rows","push","i","slice","caloriesMax","fatMax","sodiumMax","proteinMax","Diary","Gluten","Fish","Nuts","Shellfish","keys","filter","val","queryRecipes","_query","sort","b","filtered","updateRecipes","e","target","newAllergies","console","log","maxType","_this3","regex","RegExp","newValue","defineProperty","_this4","rel","src_Logo","applyFilter","bind","min","max","setPercentage","setDiet","setAllergy","setMax","setRating","SignUp","textAlign","goGuru","React","Locations","Router","Location","App","path","handler","SearchHome","ErrorPage","matchedIngredients","includedIngredients","excludedIngredients","input","selected","exclude","getIngredients","inputRegex","matchingIng","suggestion","concat","listType","list","queryParams","ListCard","remove","removeIngredient","suggestedIngredients","suggestionSelected","placeholder","size","textChanged","onFocus","toggleFocus","onBlur","component_default","defaultChecked","toggleInclusion","icons","buttonStyle","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2094992.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3f251fc8.png\";","import React, { Component } from 'react';\r\n\r\nclass Logo extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{width: \"100%\"}}>\r\n        <a href=\"/\">\r\n          <img src={ require('./logo.png') }\r\n               alt=\"logo\"\r\n               height={this.props.height}\r\n               width={this.props.width}\r\n               style={{display: \"block\", margin: \"auto\" }}/>\r\n        </a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Logo","import $ from 'jquery';\r\nimport * as qs from 'query-string';\r\n\r\n/**\r\n * Callback type used throughout the class\r\n * \r\n * @callback asyncCallback\r\n * @param {Object} data Data to be returned\r\n */\r\n\r\nclass Dataset {\r\n  /**\r\n   * Get all ingredients from the dataset\r\n   * @param {asyncCallback} callback \r\n   */\r\n  static getIngredients(callback) {\r\n    const ingredientsAPI = \"https://recipe-guru.appspot.com/api/v1/ingredients\";\r\n\r\n    $.getJSON(ingredientsAPI, (data) => callback(data));\r\n  }\r\n\r\n  /**\r\n   * Get a recipe by the recipe ID used in the database\r\n   * @param {number} id ID of recipe\r\n   * @param {asyncCallback} callback \r\n   */\r\n  static getRecipe(id, callback) {\r\n    const recipeAPI = \"https://recipe-guru.appspot.com/api/v1/recipe\"\r\n\r\n    $.getJSON(recipeAPI + \"/\" + id, (data) => callback(data))\r\n  }\r\n\r\n  /**\r\n   * Get all recipes that satisfy the inclusion/exclusion ingredients\r\n   * and other constraints.\r\n   * @param {string[]} incIngredients Ingredients to include\r\n   * @param {string[]} excIngredients Ingredients to exclude\r\n   * @param {string} diet Dietary requirements: Vgn, Vgt, Pesc or `null`\r\n   * @param {string[]} allergies Allergy exclusions, can include:\r\n   * Dairy, Gluten, Fish, Nuts and Shellfish\r\n   * @param {string} matchType Atmost and Atleast inclusion ability\r\n   * @param {asyncCallback} callback \r\n   */\r\n  static queryRecipes(incIngredients, excIngredients, diet, allergies, matchType, callback) {\r\n    const queryObject = {\r\n      ing: incIngredients\r\n    }\r\n    if (excIngredients.length > 0) queryObject.ingexc = excIngredients;\r\n    if (diet != null) queryObject.diet = diet;\r\n    if (allergies.length > 0) queryObject.allergy = allergies;\r\n\r\n    if (matchType === \"Atleast\" || matchType === \"Atmost\")\r\n      queryObject.match = matchType\r\n    \r\n    this.queryRecipesWithObject(queryObject, callback)\r\n  }\r\n\r\n  static queryRecipesWithObject(queryObject, callback) {\r\n    const recipesAPI = \"https://recipe-guru.appspot.com/api/v1/recipes\"\r\n\r\n    let queryString = qs.stringify(queryObject, {arrayFormat: \"bracket\"})\r\n    $.getJSON(recipesAPI + \"?\" + queryString, (data) => callback(data))\r\n  }\r\n}\r\n\r\nexport default Dataset;","import React, { Component } from 'react';\r\nimport './Recipe.css';\r\nimport Dataset from './Dataset.js';\r\n\r\nexport class Recipe extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let recipe = {\r\n      calories: 0,\r\n      categories: [],\r\n      directions: [],\r\n      fat: 0,\r\n      id: 0,\r\n      ingredients: [],\r\n      protein: 0,\r\n      rating: 0,\r\n      sodium: 0,\r\n      title: \"\"\r\n    }\r\n    this.state = recipe\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Get recipe on loading component\r\n    Dataset.getRecipe(this.props.id, (data) => this.setState(data))\r\n  }\r\n\r\n  render() {\r\n    const directionItems = this.state.directions.map(\r\n      (direction, index) => <li className=\"recipeListItem\" key={index}>{direction}</li>\r\n    );\r\n    const ingredientItems = this.state.ingredients.map(\r\n      (ingredient, index) => <li className=\"recipeListItem\" key={index}>{ingredient}</li>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div id=\"recipe\">\r\n          <div id=\"recipeHeader\" className=\"card\">\r\n            <a href=\"/\">\r\n              <img src={ require('./logo.png') } alt=\"logo\" id=\"headerLogo\"\r\n                   height=\"100\" width=\"100\"/>\r\n            </a>\r\n            <h1 id=\"recipeName\">{this.state.title}</h1>\r\n            <Rating rating={this.state.rating}/>\r\n          </div>\r\n\r\n          <div className=\"card recipeList\">\r\n            <h2 className=\"recipeSubHeading\">Ingredients</h2>\r\n            <hr></hr>\r\n            <ul style={{paddingLeft: \"0px\"}}>{ingredientItems}</ul>\r\n          </div>\r\n\r\n          <div className=\"card recipeList\">\r\n            <h2 className=\"recipeSubHeading\">Directions</h2>\r\n            <hr></hr>\r\n            <ol style={{paddingLeft: \"0px\"}}>{directionItems}</ol>\r\n          </div>\r\n\r\n          <div id=\"stats\">\r\n            <StatBox heading=\"Calories\" value={this.state.calories} />\r\n            <StatBox heading=\"Fat\" value={this.state.fat} />\r\n            <StatBox heading=\"Sodium\" value={this.state.sodium} />\r\n            <StatBox heading=\"Protein\" value={this.state.protein} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * JSX Element of recipe rating\r\n */\r\nfunction Rating(props) {\r\n  let rating = \"\"\r\n  for (let index = 0; index < Math.round(props.rating); index++) {\r\n    rating = rating + \"\\u2605\"\r\n  }\r\n  return <p id=\"recipeRating\">Rating: {rating}</p>\r\n}\r\n\r\n/**\r\n * JSX Element of recipe dietary information\r\n */\r\nfunction StatBox(props) {\r\n  return (\r\n    <span className=\"card statBox\">\r\n      <div className=\"statHeading\"><h3>{props.heading}</h3></div>\r\n      <hr></hr>\r\n      <div className=\"statValue\"><p>{props.value}</p></div>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Recipe;","import React, { Component } from 'react';\r\nimport './Results.css';\r\nimport Logo from './Logo'\r\nimport Dataset from './Dataset.js';\r\n\r\nexport class Results extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      results: [],\r\n      diet: \"None\",\r\n      caloriesMax: \"\",\r\n      fatMax: \"\",\r\n      sodiumMax: \"\",\r\n      proteinMax: \"\",\r\n      allergy: {\r\n        Diary: false,\r\n        Gluten: false,\r\n        Fish: false,\r\n        Nuts: false,\r\n        Shellfish: false\r\n      },\r\n      percentage: \"0\",\r\n      rating: \"0\"\r\n    };\r\n  }\r\n\r\n  updateRecipes() {\r\n    let allergies = Object.keys(this.state.allergy).filter(val => this.state.allergy[val] === true)\r\n\r\n    Dataset.queryRecipes(\r\n      this.props._query.ing ? this.props._query.ing : [],\r\n      this.props._query.ingexc ? this.props._query.ingexc : [],\r\n      this.state.diet === \"None\" ? null : this.state.diet,\r\n      allergies,\r\n      \"Atleast\",\r\n      (data) => {\r\n        data.sort((a,b) => b.percentage - a.percentage)\r\n        const filtered = data.filter(recipe => {\r\n          return (this.state.caloriesMax === \"\" || recipe.calories < +this.state.caloriesMax) &&\r\n                  (this.state.fatMax === \"\" || recipe.fat < +this.state.fatMax) &&\r\n                  (this.state.sodiumMax === \"\" || recipe.sodium < +this.state.sodiumMax) &&\r\n                  (this.state.proteinMax === \"\" || recipe.protein < +this.state.proteinMax) &&\r\n                  (recipe.percentage > (+this.state.percentage) * 10) &&\r\n                  (recipe.rating >= +this.state.rating) \r\n        })\r\n        this.setState({results: filtered});\r\n      }\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateRecipes()\r\n  }\r\n\r\n  createCards = () => {\r\n    const cards = this.state.results.map((recipe, index) => \r\n      <Card id={recipe.id.toString()}\r\n            title={recipe.title}\r\n            percentage={recipe.percentage}\r\n            required={recipe.unmatched.length}\r\n            key={recipe.id}></Card>\r\n    );\r\n\r\n    const rows = []\r\n\r\n    if (cards.length === 0) {\r\n      rows.push( <h2>No Results Found</h2> )\r\n    }\r\n    else {\r\n      rows.push( <h2>Showing {cards.length} Results</h2> )\r\n    }\r\n    \r\n    for (let i = 0; i < cards.length; i = i + 4) {\r\n      rows.push(<div className=\"row\">{cards.slice(i, i+4)}</div>)\r\n      rows.push(<br></br>)\r\n    }\r\n\r\n    return rows\r\n  }\r\n\r\n  setDiet(e) {\r\n    this.setState({diet: e.target.value})\r\n  }\r\n\r\n  setAllergy(e) {\r\n    let newAllergies = this.state.allergy;\r\n    newAllergies[e.target.value] = !newAllergies[e.target.value]\r\n    this.setState({allergy: newAllergies})\r\n    console.log(e.target);\r\n  }\r\n\r\n  setPercentage(e) {\r\n    console.log(e.target.value);\r\n    this.setState({percentage: e.target.value})\r\n  }\r\n\r\n  setRating(e) {\r\n    console.log(e.target.value);\r\n    this.setState({rating: e.target.value})\r\n  }\r\n\r\n  setMax(val, maxType) {\r\n    const regex = new RegExp(\"^[0-9]+$\");\r\n    const newValue = val.match(regex) ? val : \"\";\r\n    this.setState({[maxType]: newValue}, () => console.log(this.state[maxType]));\r\n  }\r\n  \r\n  applyFilter() {\r\n    this.updateRecipes()\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <link rel=\"stylesheet\" href=\"Results.css\" />\r\n        <div className=\"filterPanel\">\r\n          <Logo height=\"250\" width=\"250\"/>\r\n          <h3 id=\"filterTitle\">Filter Results</h3>\r\n            \r\n          <button onClick={this.applyFilter.bind(this)}\r\n                  className=\"card filterCard\" id=\"applyButton\">Apply Filter</button>\r\n\r\n          <div className=\"staticCard filterCard\">\r\n            <h4 className=\"filterSubtitle\">Percentage Match</h4>\r\n            <input type=\"range\" className=\"percentageSlider\" min=\"0\" max=\"10\" value={this.state.percentage} onChange={this.setPercentage.bind(this)}/>\r\n            <p className=\"filterText\">At least {(+this.state.percentage) * 10}%</p>\r\n          </div>\r\n            \r\n          <div className=\"staticCard filterCard\">\r\n            <h4 className=\"filterSubtitle\">Diet</h4>\r\n            <div onChange={this.setDiet.bind(this)}>\r\n              <input type=\"radio\" name=\"Diet\" value=\"None\" /> <label className=\"filterText\"> None </label> <br></br>\r\n              <input type=\"radio\" name=\"Diet\" value=\"Vgn\" /><label className=\"filterText\"> Vegan</label> <br></br>\r\n              <input type=\"radio\" name=\"Diet\" value=\"Vgt\" /> <label className=\"filterText\"> Vegetarian</label>  <br></br>\r\n              <input type=\"radio\" name=\"Diet\" value=\"Pesc\" /> <label className=\"filterText\"> Pescatarian</label> <br></br>\r\n            </div>\r\n          </div>\r\n            \r\n          <div className=\"staticCard filterCard\">\r\n            <h4 className=\"filterSubtitle\">Allergy</h4>\r\n            <div onChange={this.setAllergy.bind(this)}>\r\n              <input type=\"checkbox\" name=\"Allergy\" value=\"Dairy\" /> <label className=\"filterText\"> Dairy </label> <br></br>\r\n              <input type=\"checkbox\" name=\"Allergy\" value=\"Gluten\" /> <label className=\"filterText\"> Gluten </label> <br></br>\r\n              <input type=\"checkbox\" name=\"Allergy\" value=\"Fish\" /> <label className=\"filterText\"> Fish </label> <br></br>\r\n              <input type=\"checkbox\" name=\"Allergy\" value=\"Nuts\" /> <label className=\"filterText\"> Nuts </label> <br></br>\r\n              <input type=\"checkbox\" name=\"Allergy\" value=\"Shellfish\" /> <label className=\"filterText\"> Shellfish </label> <br></br>\r\n            </div>\r\n          </div>\r\n\r\n          <StatFilterCard name=\"Calories\" unit=\" calories\"\r\n                          onChange={(e) => this.setMax(e.target.value, \"caloriesMax\")}\r\n                          value={this.state.caloriesMax}/>\r\n          <StatFilterCard name=\"Fat\" unit=\" grams\"\r\n                          onChange={(e) => this.setMax(e.target.value, \"fatMax\")}\r\n                          value={this.state.fatMax}/>\r\n          <StatFilterCard name=\"Sodium\" unit=\" milligrams\"\r\n                          onChange={(e) => this.setMax(e.target.value, \"sodiumMax\")}\r\n                          value={this.state.sodiumMax}/>\r\n          <StatFilterCard name=\"Protein\" unit=\" grams\"\r\n                          onChange={(e) => this.setMax(e.target.value, \"proteinMax\")}\r\n                          value={this.state.proteinMax}/>\r\n\r\n          <div className=\"staticCard filterCard\">\r\n            <h4 className=\"filterSubtitle\">Rating</h4>\r\n            <input type=\"range\" className=\"percentageSlider\" min=\"0\" max=\"5\" value={this.state.rating} onChange={this.setRating.bind(this)}/>\r\n            <p className=\"filterText\">At least {this.state.rating}/5</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className = \"results\">\r\n          <h2 id=\"resultsTitle\">\r\n            Results\r\n          </h2>\r\n          {this.createCards()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction StatFilterCard(props) {\r\n  return (\r\n    <div className=\"staticCard filterCard\">\r\n      <h4 className=\"filterSubtitle\">{props.name}</h4>\r\n      <p className=\"filterText\">\r\n        {\"Less than \"}\r\n        <input  type=\"number\"\r\n                className=\"numberSlider\"\r\n                onChange={props.onChange}\r\n                value={props.value}/>\r\n        {props.unit}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Card(props) {\r\n  const recipeLink = () => {\r\n    window.location.href = \"/recipe/\" + props.id;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"column\">\r\n        <button className=\"card\" style={{border: \"none\"}} onClick={() => recipeLink()}>\r\n          <h4 className=\"recipeName\"><b>{props.title}</b></h4>\r\n          <hr></hr>\r\n          <p className=\"percentage\">{props.percentage}%</p>\r\n          <p className=\"requiredIng\">Requires <b>{props.required}</b> more ingredients</p>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Results","import React from 'react';\r\nimport Logo from './Logo';\r\n\r\n\r\nclass SignUp extends React.Component {\r\n\r\n  \r\n    goGuru() {\r\n      window.location.href = \"/\";\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <Logo height=\"200\" width=\"200\"/>\r\n          <h1 id=\"arTitle\">404 - Page Not Found</h1>\r\n          <p style={{textAlign: \"center\"}}>\r\n            The page you are looking for cannot be found, please use the following link to return to the home page: \r\n          </p>\r\n          <div id=\"goGuru\">\r\n            <button type=\"button\" id=\"submit\" className=\"card\"\r\n                    onClick={() => this.goGuru()}>GO GURU!</button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default SignUp;\r\n","import React, { Component } from 'react';\r\nimport Router from 'react-router-component';\r\nimport Toggle from 'react-toggle';\r\nimport \"react-toggle/style.css\"\r\nimport * as qs from 'query-string';\r\n\r\nimport './style.css';\r\nimport Logo from './Logo'\r\nimport Recipe from './Recipe.js'\r\nimport Results from './Results.js'\r\nimport Dataset from './Dataset'\r\nimport ErrorPage from './404Error'\r\n\r\nvar Locations = Router.Locations;\r\nvar Location = Router.Location;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Locations>\r\n        <Location path='/' handler={SearchHome} />\r\n        <Location path='/recipe/:id' handler={Recipe} />\r\n        <Location path='/results' handler={Results} />\r\n        <Location path='*' handler={ErrorPage}/>\r\n      </Locations>\r\n    )\r\n  }\r\n}\r\n\r\nclass SearchHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ingredients: [],\r\n      matchedIngredients: [],\r\n      includedIngredients: [],\r\n      excludedIngredients: [],\r\n      input: \"\",\r\n      selected: false,\r\n      exclude: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Dataset.getIngredients((data) => {\r\n      this.setState({ingredients: data})\r\n    })\r\n  }\r\n\r\n  textChanged(e) {\r\n    const inputRegex = new RegExp(e.target.value, \"i\") //regex of search text\r\n    //Show no results for no search text, otherwise all that match inputRegex\r\n    const matchingIng = e.target.value === \"\" ? [] : this.state.ingredients.filter((ingredient) => {\r\n      return ingredient.match(inputRegex)\r\n    })\r\n    this.setState({\r\n      input: e.target.value,\r\n      matchedIngredients: matchingIng\r\n    });\r\n  }\r\n\r\n  suggestionSelected(suggestion) {\r\n    /* While in exclusion mode, add selected ingredients to the exclusion list,\r\n     * otherwise add them to the inclusion list\r\n     */\r\n    if (!this.state.exclude) {\r\n      this.setState({\r\n        includedIngredients: this.state.includedIngredients.concat([suggestion])\r\n      })\r\n    } else {\r\n      this.setState({\r\n        excludedIngredients: this.state.excludedIngredients.concat([suggestion])\r\n      })\r\n    }\r\n    //Upon selection, reset input to empty string\r\n    this.setState({\r\n      input: \"\",\r\n      matchedIngredients: []\r\n    })\r\n  }\r\n\r\n  removeIngredient(ingredient, listType) {\r\n    if (listType === \"inclusion\") {\r\n      let list = this.state.includedIngredients;\r\n      list = list.filter(ing => ing !== ingredient)\r\n      this.setState({includedIngredients: list})\r\n    } else {\r\n      let list = this.state.excludedIngredients;\r\n      list = list.filter(ing => ing !== ingredient)\r\n      this.setState({excludedIngredients: list})\r\n    }\r\n  }\r\n\r\n  toggleFocus() {\r\n    this.setState({selected: !this.state.selected})\r\n  }\r\n\r\n  toggleInclusion() {\r\n    this.setState({exclude: !this.state.exclude});\r\n  }\r\n\r\n  goGuru() {\r\n    const queryParams = {\r\n      ing: this.state.includedIngredients,\r\n      ingexc: this.state.excludedIngredients\r\n    }\r\n    const queryString = qs.stringify(queryParams, {arrayFormat: \"bracket\"});\r\n    window.location.href = \"/results?\" + queryString;\r\n  }\r\n \r\n  \r\n\r\n  render() {\r\n    let incIngredients = this.state.includedIngredients.map(ing => {\r\n      return <ListCard key={ing} ing={ing} type=\"inclusion\" remove={() => this.removeIngredient(ing, \"inclusion\") }/>\r\n    })\r\n    let excIngredients = this.state.excludedIngredients.map(ing => {\r\n      return <ListCard key={ing} ing={ing} type=\"exclusion\" remove={() => this.removeIngredient(ing, \"exclusion\") }/>\r\n    })\r\n    let suggestedIngredients = this.state.matchedIngredients.map(ing => {\r\n      return (\r\n          <li key={ing}\r\n              className=\"suggestedItem\"\r\n              onClick={() => this.suggestionSelected(ing)}>{ing}</li>)\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <link rel=\"stylesheet\" href=\"style.css\" />\r\n        <title>Recipe Guru</title>\r\n        <Logo height=\"200\" width=\"200\"/>\r\n        <h1 id=\"arTitle\">Recipe Guru</h1>\r\n        <div id=\"ingredientSearch\" className=\"card\">\r\n          <div>\r\n            {/* Search box input field */}\r\n            <input id=\"searchField\" type=\"text\" placeholder=\"Search for ingredients...\" size={20} \r\n                  onChange={this.textChanged.bind(this)}\r\n                  onFocus={() => this.toggleFocus()}\r\n                  onBlur={() => this.toggleFocus()}\r\n                  value={this.state.input}/>\r\n            <hr></hr>\r\n            {/* Toggle for include/exclude mode */}\r\n            <label>\r\n              <Toggle \r\n                defaultChecked={!this.state.exclude}\r\n                onChange={() => this.toggleInclusion()}\r\n                icons={false}/>\r\n              <span id=\"inclusionToggle\">{this.state.exclude ? \"exclude mode\" : \"include mode\"}</span>\r\n            </label>\r\n          </div>\r\n          {this.state.matchedIngredients.length > 0\r\n           ? <hr></hr> : <div></div>}\r\n          <ul id=\"suggestedIng\">\r\n            {suggestedIngredients}\r\n          </ul>\r\n        </div>\r\n          {this.state.includedIngredients.length === 0 ? <div></div> :\r\n            // Included ingredients cards\r\n            <div style={{textAlign: \"center\"}}>\r\n              <h2 className=\"listLabel\">Included Ingredients</h2>\r\n              <div className=\"listdiv\">{incIngredients}</div>\r\n            </div>\r\n          }\r\n          {this.state.excludedIngredients.length === 0 ? <div></div> :\r\n            // Excluded ingredients cards\r\n            <div style={{textAlign: \"center\"}}>\r\n              <h2 className=\"listLabel\">Excluded Ingredients</h2>\r\n              <div className=\"listdiv\">\r\n                {excIngredients}\r\n              </div>\r\n            </div>\r\n          }\r\n        \r\n        <div id=\"goGuru\">\r\n          <button type=\"button\" id=\"submit\" className=\"card\"\r\n                  onClick={() => this.goGuru()}>GO GURU!</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Inclusion or exclusion list card.\r\n */\r\nfunction ListCard(props) {\r\n  const style = props.type === \"inclusion\" ? \"inclusionCard listcard\" : \"exclusionCard listcard\";\r\n  const buttonStyle = props.type === \"inclusion\" ? \" cardButton inclusionCardButton\" : \" cardButton exclusionCardButton\"\r\n\r\n  return (\r\n    <div key={props.ing} className={style}>\r\n        <p>{props.ing}</p>\r\n        <button className={buttonStyle} onClick={props.remove}>Remove</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}