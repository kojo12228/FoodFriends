{"version":3,"sources":["logo.png","Dataset.js","Recipe.js","Results.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Dataset","callback","$","getJSON","data","id","recipeAPI","incIngredients","excIngredients","diet","allergies","matchType","queryObject","ing","length","ingexc","allergy","match","this","queryRecipesWithObject","queryString","qs","arrayFormat","recipesAPI","Rating","props","rating","index","Math","round","react_default","a","createElement","StatBox","className","heading","value","Recipe","_Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","calories","categories","directions","fat","ingredients","protein","sodium","title","inherits","createClass","key","_this2","getRecipe","setState","directionItems","map","direction","ingredientItems","ingredient","src","require","alt","height","width","Component","Link","Router","Card","href","percentage","required","Results","createCards","cards","results","recipe","toString","unmatched","rows","i","push","slice","caloriesMax","fatMax","sodiumMax","proteinMax","Diary","Gluten","Fish","Nuts","Shellfish","keys","filter","val","queryRecipes","_query","sort","b","filtered","updateRecipes","e","target","newAllergies","console","log","maxType","_this3","regex","RegExp","newValue","defineProperty","_this4","rel","onClick","applyFilter","bind","type","min","max","onChange","setPercentage","setDiet","name","setAllergy","setMax","setRating","Locations","Location","App","path","handler","SearchHome","matchedIngredients","includedIngredients","excludedIngredients","input","selected","exclude","getIngredients","inputRegex","matchingIng","suggestion","concat","listType","list","queryParams","window","location","incIngr","ListCard","remove","removeIngredient","excIngr","suggestedIngredients","suggestionSelected","style","display","margin","placeholder","size","textChanged","onFocus","toggleFocus","onBlur","component_default","defaultChecked","toggleInclusion","icons","textAlign","overflowX","marginLeft","marginRight","goGuru","buttonStyle","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f366d237.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3f251fc8.png\";","import $ from 'jquery';\r\nimport * as qs from 'query-string';\r\n\r\nclass Dataset {\r\n    static getIngredients(callback) {\r\n        const ingredientsAPI = \"https://recipe-guru.appspot.com/api/v1/ingredients\";\r\n\r\n        $.getJSON(ingredientsAPI, (data) => callback(data));\r\n    }\r\n\r\n    static getRecipe(id, callback) {\r\n        const recipeAPI = \"https://recipe-guru.appspot.com/api/v1/recipe\"\r\n\r\n        $.getJSON(recipeAPI + \"/\" + id, (data) => callback(data))\r\n    }\r\n\r\n    static queryRecipes(incIngredients, excIngredients, diet, allergies, matchType, callback) {\r\n        const queryObject = {\r\n            ing: incIngredients\r\n        }\r\n        if (excIngredients.length > 0) queryObject.ingexc = excIngredients;\r\n        if (diet != null) queryObject.diet = diet;\r\n        if (allergies.length > 0) queryObject.allergy = allergies;\r\n\r\n        if (matchType === \"Atleast\" || matchType === \"Atmost\")\r\n            queryObject.match = matchType\r\n        \r\n        this.queryRecipesWithObject(queryObject, callback)\r\n    }\r\n\r\n    static queryRecipesWithObject(queryObject, callback) {\r\n        const recipesAPI = \"https://recipe-guru.appspot.com/api/v1/recipes\"\r\n\r\n        let queryString = qs.stringify(queryObject, {arrayFormat: \"bracket\"})\r\n        $.getJSON(recipesAPI + \"?\" + queryString, (data) => callback(data))\r\n    }\r\n}\r\n\r\nexport default Dataset;","import React, { Component } from 'react';\r\nimport './Recipe.css';\r\nimport Dataset from './Dataset.js';\r\n\r\nexport class Recipe extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let recipe = {\r\n            calories: 0,\r\n            categories: [],\r\n            directions: [],\r\n            fat: 0,\r\n            id: 0,\r\n            ingredients: [],\r\n            protein: 0,\r\n            rating: 0,\r\n            sodium: 0,\r\n            title: \"\"\r\n        }\r\n        this.state = recipe\r\n    }\r\n\r\n    componentDidMount() {\r\n        Dataset.getRecipe(this.props.id, (data) => this.setState(data))\r\n    }\r\n\r\n    render() {\r\n        const directionItems = this.state.directions.map(\r\n            (direction, index) => <li className=\"directionItem\" key={index}>{direction}</li>\r\n        );\r\n        const ingredientItems = this.state.ingredients.map(\r\n            (ingredient, index) => <li className=\"ingredientItem\" key={index}>{ingredient}</li>\r\n        );\r\n        return(\r\n            <div>\r\n                <div id=\"recipe\">\r\n                    <div id=\"recipeHeader\" className=\"card\">\r\n                        <img src={ require('./logo.png') } alt=\"logo\" id=\"headerLogo\" height=\"100\" width=\"100\"/>\r\n                        <h1 id=\"recipeName\">{this.state.title}</h1>\r\n                        <Rating rating={this.state.rating}/>\r\n                    </div>\r\n                    <div className=\"card recipeList\">\r\n                        <h2 className=\"recipeSubHeading\">Ingredients</h2>\r\n                        <hr></hr>\r\n                        <ul>{ingredientItems}</ul>\r\n                    </div>\r\n                    <div className=\"card recipeList\">\r\n                        <h2 className=\"recipeSubHeading\">Directions</h2>\r\n                        <hr></hr>\r\n                        <ol>{directionItems}</ol>\r\n                    </div>\r\n                    <div id=\"stats\">\r\n                        <StatBox heading=\"Calories\" value={this.state.calories} />\r\n                        <StatBox heading=\"Fat\" value={this.state.fat} />\r\n                        <StatBox heading=\"Sodium\" value={this.state.sodium} />\r\n                        <StatBox heading=\"Protein\" value={this.state.protein} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Rating(props) {\r\n    let rating = \"\"\r\n    for (let index = 0; index < Math.round(props.rating); index++) {\r\n        rating = rating + \"\\u2605\"\r\n    }\r\n    return <p id=\"recipeRating\">Rating: {rating}</p>\r\n}\r\n\r\nfunction StatBox(props) {\r\n    return (\r\n        <span className=\"card statBox\">\r\n            <div className=\"statHeading\"><h3>{props.heading}</h3></div>\r\n            <hr></hr>\r\n            <div className=\"statValue\"><p>{props.value}</p></div>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React, { Component } from 'react';\r\nimport Router from 'react-router-component';\r\nimport './Results.css';\r\nimport Dataset from './Dataset.js';\r\nvar Link = Router.Link;\r\n\r\nexport class Results extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            results: [],\r\n            diet: \"None\",\r\n            caloriesMax: \"\",\r\n            fatMax: \"\",\r\n            sodiumMax: \"\",\r\n            proteinMax: \"\",\r\n            allergy: {\r\n                Diary: false,\r\n                Gluten: false,\r\n                Fish: false,\r\n                Nuts: false,\r\n                Shellfish: false\r\n            },\r\n            percentage: \"0\",\r\n            rating: \"0\",\r\n                                                                        \r\n        };\r\n    }\r\n\r\n    updateRecipes() {\r\n        let allergies = Object.keys(this.state.allergy).filter(val => this.state.allergy[val] === true)\r\n\r\n        Dataset.queryRecipes(\r\n            this.props._query.ing ? this.props._query.ing : [],\r\n            this.props._query.ingexc ? this.props._query.ingexc : [],\r\n            this.state.diet === \"None\" ? null : this.state.diet,\r\n            allergies,\r\n            \"Atleast\",\r\n            (data) => {\r\n                data.sort((a,b) => b.percentage - a.percentage)\r\n                const filtered = data.filter(recipe => {\r\n                    return (this.state.caloriesMax === \"\" || recipe.calories < +this.state.caloriesMax) &&\r\n                            (this.state.fatMax === \"\" || recipe.fat < +this.state.fatMax) &&\r\n                            (this.state.sodiumMax === \"\" || recipe.sodium < +this.state.sodiumMax) &&\r\n                            (this.state.proteinMax === \"\" || recipe.protein < +this.state.proteinMax) &&\r\n                            (recipe.percentage > (+this.state.percentage) * 10) &&\r\n                            (recipe.rating > +this.state.rating) \r\n                })\r\n                this.setState({results: filtered});\r\n            }\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateRecipes()\r\n    }\r\n\r\n    createCards = () => {\r\n        const cards = this.state.results.map((recipe, index) => \r\n            <Card   id={recipe.id.toString()}\r\n                    title={recipe.title}\r\n                    percentage={recipe.percentage}\r\n                    required={recipe.unmatched.length}\r\n                    key={recipe.id}></Card>\r\n        );\r\n\r\n        const rows = []\r\n\r\n        for (let i = 0; i < cards.length; i = i + 4) {\r\n            rows.push(<div className=\"row\">{cards.slice(i, i+4)}</div>)\r\n            rows.push(<br></br>)\r\n        }\r\n\r\n        return rows\r\n    }\r\n\r\n    setDiet(e) {\r\n        this.setState({diet: e.target.value})\r\n    }\r\n\r\n    setAllergy(e) {\r\n        let newAllergies = this.state.allergy;\r\n        newAllergies[e.target.value] = !newAllergies[e.target.value]\r\n        this.setState({allergy: newAllergies})\r\n        console.log(e.target);\r\n    }\r\n\r\n    setPercentage(e) {\r\n        console.log(e.target.value);\r\n        this.setState({percentage: e.target.value})\r\n    }\r\n\r\n    setRating(e) {\r\n        console.log(e.target.value);\r\n        this.setState({rating: e.target.value})\r\n    }\r\n\r\n    setMax(val, maxType) {\r\n        const regex = new RegExp(\"^[0-9]+$\");\r\n        const newValue = val.match(regex) ? val : \"\";\r\n        this.setState({[maxType]: newValue}, () => console.log(this.state[maxType]));\r\n    }\r\n    \r\n    applyFilter() {\r\n        this.updateRecipes()\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return(\r\n            <div>\r\n            <link rel=\"stylesheet\" href=\"Results.css\" />\r\n            <div className=\"filterPanel\">\r\n                <img src={ require('./logo.png') } id=\"rgLogo\" alt=\"Recipe Guru\"></img>\r\n                <h3 id=\"filterTitle\">Filter Results</h3>\r\n                \r\n                <button onClick={this.applyFilter.bind(this)}\r\n                        className=\"card filterCard\" id=\"applyButton\">Apply Filter</button>\r\n\r\n                <div className=\"staticCard filterCard\">\r\n                    <h4 className=\"filterSubtitle\">Percentage Match</h4>\r\n                    <input type=\"range\" className=\"percentageSlider\" min=\"0\" max=\"10\" value={this.state.percentage} onChange={this.setPercentage.bind(this)}/>\r\n                    <p className=\"filterText\">At least {(+this.state.percentage) * 10}%</p>\r\n                </div>\r\n                \r\n                <div className=\"staticCard filterCard\">\r\n                    <h4 className=\"filterSubtitle\">Diet</h4>\r\n                    <div onChange={this.setDiet.bind(this)}>\r\n                        <input type=\"radio\" name=\"Diet\" value=\"None\" /> <label className=\"filterText\"> None </label> <br></br>\r\n                        <input type=\"radio\" name=\"Diet\" value=\"Vgn\" /><label className=\"filterText\"> Vegan</label> <br></br>\r\n                        <input type=\"radio\" name=\"Diet\" value=\"Vgt\" /> <label className=\"filterText\"> Vegetarian</label>  <br></br>\r\n                        <input type=\"radio\" name=\"Diet\" value=\"Pesc\" /> <label className=\"filterText\"> Pescatarian</label> <br></br>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"staticCard filterCard\">\r\n                    <h4 className=\"filterSubtitle\">Allergy</h4>\r\n                    <div onChange={this.setAllergy.bind(this)}>\r\n                        <input type=\"checkbox\" name=\"Allergy\" value=\"Dairy\" /> <label className=\"filterText\"> Dairy </label> <br></br>\r\n                        <input type=\"checkbox\" name=\"Allergy\" value=\"Gluten\" /> <label className=\"filterText\"> Gluten </label> <br></br>\r\n                        <input type=\"checkbox\" name=\"Allergy\" value=\"Fish\" /> <label className=\"filterText\"> Fish </label> <br></br>\r\n                        <input type=\"checkbox\" name=\"Allergy\" value=\"Nuts\" /> <label className=\"filterText\"> Nuts </label> <br></br>\r\n                        <input type=\"checkbox\" name=\"Allergy\" value=\"Shellfish\" /> <label className=\"filterText\"> Shellfish </label> <br></br>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"staticCard filterCard\">\r\n                    <h4 className=\"filterSubtitle\">Calories</h4>\r\n                    <p className=\"filterText\">\r\n                        Less than <input type=\"number\" className=\"numberSlider\" onChange={(e) => this.setMax(e.target.value, \"caloriesMax\")} value={this.state.caloriesMax}/> calories \r\n                    </p>\r\n                </div>\r\n                \r\n                <div className=\"staticCard filterCard\">\r\n                    <h4 className=\"filterSubtitle\">Fat</h4>\r\n                    <p className=\"filterText\">Less than <input type=\"number\" className=\"numberSlider\" onChange={(e) => this.setMax(e.target.value, \"fatMax\")} value={this.state.fatMax}/> grams </p>\r\n                </div>\r\n\r\n                <div className=\"staticCard filterCard\">\r\n                    <h4 className=\"filterSubtitle\">Sodium</h4>\r\n                    <p className=\"filterText\">Less than <input type=\"number\" className=\"numberSlider\" onChange={(e) => this.setMax(e.target.value, \"sodiumMax\")} value={this.state.sodiumMax}/> milligrams </p>\r\n                </div>\r\n\r\n                <div className=\"staticCard filterCard\">\r\n                    <h4 className=\"filterSubtitle\">Protein</h4>\r\n                    <p className=\"filterText\">Less than <input type=\"number\" className=\"numberSlider\" onChange={(e) => this.setMax(e.target.value, \"proteinMax\")} value={this.state.proteinMax}/> grams </p>\r\n                </div>\r\n\r\n                <div className=\"staticCard filterCard\">\r\n                    <h4 className=\"filterSubtitle\">Rating</h4>\r\n                    <input type=\"range\" className=\"percentageSlider\" min=\"0\" max=\"5\" value={this.state.rating} onChange={this.setRating.bind(this)}/>\r\n                    <p className=\"filterText\">At least {this.state.rating}/5</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className = \"results\">\r\n\r\n                <h2 id=\"resultsTitle\">\r\n                    Results\r\n                </h2>\r\n\r\n                {this.createCards()}\r\n\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"column\">\r\n                <div className=\"card\">\r\n                    <Link href={\"/recipe/\"+props.id}><h4 className=\"recipeName\"><b>{props.title}</b></h4></Link>\r\n                    <hr></hr>\r\n                    <p className=\"percentage\">{props.percentage}%</p>\r\n                    <p className=\"requiredIng\">Requires <b>{props.required}</b> more ingredients</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results","import React, { Component } from 'react';\r\nimport Router from 'react-router-component';\r\nimport Toggle from 'react-toggle';\r\nimport \"react-toggle/style.css\"\r\nimport * as qs from 'query-string';\r\n\r\nimport './style.css';\r\nimport Recipe from './Recipe.js'\r\nimport Results from './Results.js'\r\nimport Dataset from './Dataset'\r\n\r\nvar Locations = Router.Locations;\r\nvar Location = Router.Location;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Locations>\r\n        <Location path='/' handler={SearchHome} />\r\n        <Location path='/recipe/:id' handler={Recipe} />\r\n        <Location path='/results' handler={Results} />\r\n      </Locations>\r\n    )\r\n  }\r\n}\r\n\r\nclass SearchHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ingredients: [],\r\n      matchedIngredients: [],\r\n      includedIngredients: [],\r\n      excludedIngredients: [],\r\n      input: \"\",\r\n      selected: false,\r\n      exclude: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Dataset.getIngredients((data) => {\r\n      //const items = data.map((val, i) => {return {id: i, value: val}})\r\n      this.setState({ingredients: data})\r\n    })\r\n  }\r\n\r\n  textChanged(e) {\r\n    const inputRegex = new RegExp(e.target.value, \"i\")\r\n    const matchingIng = e.target.value === \"\" ? [] : this.state.ingredients.filter((ingredient) => {\r\n      return ingredient.match(inputRegex)\r\n    })\r\n    this.setState({\r\n      input: e.target.value,\r\n      matchedIngredients: matchingIng\r\n    });\r\n  }\r\n\r\n  suggestionSelected(suggestion) {\r\n    if (!this.state.exclude) {\r\n      this.setState({\r\n        includedIngredients: this.state.includedIngredients.concat([suggestion])\r\n      })\r\n    } else {\r\n      this.setState({\r\n        excludedIngredients: this.state.excludedIngredients.concat([suggestion])\r\n      })\r\n    }\r\n    this.setState({\r\n      input: \"\",\r\n      matchedIngredients: []\r\n    })\r\n  }\r\n\r\n  removeIngredient(ingredient, listType) {\r\n\r\n    if (listType === \"inclusion\") {\r\n      let list = this.state.includedIngredients;\r\n      list = list.filter(ing => ing !== ingredient)\r\n      this.setState({includedIngredients: list})\r\n    } else {\r\n      let list = this.state.excludedIngredients;\r\n      list = list.filter(ing => ing !== ingredient)\r\n      this.setState({excludedIngredients: list})\r\n    }\r\n  }\r\n\r\n  toggleFocus() {\r\n    this.setState({selected: !this.state.selected})\r\n  }\r\n\r\n  toggleInclusion() {\r\n    this.setState({exclude: !this.state.exclude});\r\n  }\r\n\r\n  goGuru() {\r\n    const queryParams = {\r\n      ing: this.state.includedIngredients,\r\n      ingexc: this.state.excludedIngredients\r\n    }\r\n    const queryString = qs.stringify(queryParams, {arrayFormat: \"bracket\"});\r\n    window.location.href = \"/results?\" + queryString;\r\n  }\r\n \r\n  \r\n\r\n  render() {\r\n    let incIngr = this.state.includedIngredients.map(ing => {\r\n      return <ListCard key={ing} ing={ing} type=\"inclusion\" remove={() => this.removeIngredient(ing, \"inclusion\") }/>\r\n    })\r\n    let excIngr = this.state.excludedIngredients.map(ing => {\r\n      return <ListCard key={ing} ing={ing} type=\"exclusion\" remove={() => this.removeIngredient(ing, \"exclusion\") }/>\r\n    })\r\n    let suggestedIngredients = this.state.matchedIngredients.map(ing => {\r\n      return (\r\n          <div key={ing}\r\n              className=\"suggestedItem\"\r\n              onClick={() => this.suggestionSelected(ing)}>{ing}</div>)\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <link rel=\"stylesheet\" href=\"style.css\" />\r\n        <title>Recipe Guru</title>\r\n        <div style={{width: \"100%\"}}>\r\n          <img src={ require('./logo.png') } alt=\"logo\" height=\"200\" width=\"200\" style={{display: \"block\", margin: \"auto\" }}/>\r\n        </div>\r\n        <h1 id=\"arTitle\">Recipe Guru</h1>\r\n        {/*Search for ingredients search box + Add Ingredient button*/}\r\n        <div id=\"ingredientSearch\" className=\"card\">\r\n          <div>\r\n            <input id=\"searchField\" type=\"text\" placeholder=\"Search for ingredients...\" size={20} \r\n                  onChange={this.textChanged.bind(this)}\r\n                  onFocus={() => this.toggleFocus()}\r\n                  onBlur={() => this.toggleFocus()}\r\n                  value={this.state.input}/>\r\n            <hr></hr>\r\n            <label>\r\n              <Toggle \r\n                defaultChecked={!this.state.exclude}\r\n                onChange={() => this.toggleInclusion()}\r\n                icons={false}/>\r\n              <span id=\"inclusionToggle\">{this.state.exclude ? \"exclude mode\" : \"include mode\"}</span>\r\n            </label>\r\n          </div>\r\n          {this.state.matchedIngredients.length > 0\r\n           ? <hr></hr> : <div></div>}\r\n          <div id=\"suggestedIng\">\r\n            {suggestedIngredients}\r\n          </div>\r\n        </div>\r\n          {this.state.includedIngredients.length === 0 ? <div></div> :\r\n            <div style={{textAlign: \"center\"}}>\r\n              <h2 className=\"listLabel\">Included Ingredients</h2>\r\n              <div style={{width:\"60%\", overflowX:\"hidden\", marginLeft: \"auto\", marginRight: \"auto\"}}>{incIngr}</div>\r\n            </div>\r\n          }\r\n          {this.state.excludedIngredients.length === 0 ? <div></div> :\r\n            <div style={{textAlign: \"center\"}}>\r\n              <h2 className=\"listLabel\">Excluded Ingredients</h2>\r\n              <div style={{width:\"60%\", overflowX:\"hidden\", marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n                {excIngr}\r\n              </div>\r\n            </div>\r\n          }\r\n        \r\n        <div id=\"goGuru\">\r\n          <button type=\"button\" id=\"submit\" className=\"card\"\r\n                  onClick={() => this.goGuru()}>GO GURU!</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ListCard(props) {\r\n  const style = props.type === \"inclusion\" ? \"inclusionCard listcard\" : \"exclusionCard listcard\";\r\n  const buttonStyle = props.type === \"inclusion\" ? \" cardButton inclusionCardButton\" : \" cardButton exclusionCardButton\"\r\n\r\n  return (\r\n    <div key={props.ing} className={style}>\r\n        <p>{props.ing}</p>\r\n        <button className={buttonStyle} onClick={props.remove}>Remove</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}