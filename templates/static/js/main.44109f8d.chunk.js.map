{"version":3,"sources":["logo.png","Dataset.js","Recipe.js","Results.js","404Error.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Dataset","callback","$","getJSON","data","id","recipeAPI","incIngredients","excIngredients","diet","allergies","matchType","queryObject","ing","length","ingexc","allergy","match","this","queryRecipesWithObject","queryString","qs","arrayFormat","recipesAPI","Rating","props","rating","index","Math","round","react_default","a","createElement","StatBox","className","heading","value","Recipe","_Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","calories","categories","directions","fat","ingredients","protein","sodium","title","inherits","createClass","key","_this2","getRecipe","setState","directionItems","map","direction","ingredientItems","ingredient","src","require","alt","height","width","Component","StatFilterCard","name","type","onChange","unit","Card","style","border","onClick","window","location","href","percentage","required","Results","createCards","cards","results","recipe","toString","unmatched","rows","push","i","slice","caloriesMax","fatMax","sodiumMax","proteinMax","Diary","Gluten","Fish","Nuts","Shellfish","keys","filter","val","queryRecipes","_query","sort","b","filtered","updateRecipes","e","target","newAllergies","console","log","maxType","_this3","regex","RegExp","newValue","defineProperty","_this4","rel","applyFilter","bind","min","max","setPercentage","setDiet","setAllergy","setMax","setRating","SignUp","display","margin","textAlign","goGuru","React","Locations","Router","Location","App","path","handler","SearchHome","ErrorPage","matchedIngredients","includedIngredients","excludedIngredients","input","selected","exclude","getIngredients","inputRegex","matchingIng","suggestion","concat","listType","list","queryParams","incIngr","ListCard","remove","removeIngredient","excIngr","suggestedIngredients","suggestionSelected","placeholder","size","textChanged","onFocus","toggleFocus","onBlur","component_default","defaultChecked","toggleInclusion","icons","overflowX","marginLeft","marginRight","buttonStyle","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44109f8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3f251fc8.png\";","import $ from 'jquery';\r\nimport * as qs from 'query-string';\r\n\r\nclass Dataset {\r\n  static getIngredients(callback) {\r\n    const ingredientsAPI = \"https://recipe-guru.appspot.com/api/v1/ingredients\";\r\n\r\n    $.getJSON(ingredientsAPI, (data) => callback(data));\r\n  }\r\n\r\n  static getRecipe(id, callback) {\r\n    const recipeAPI = \"https://recipe-guru.appspot.com/api/v1/recipe\"\r\n\r\n    $.getJSON(recipeAPI + \"/\" + id, (data) => callback(data))\r\n  }\r\n\r\n  static queryRecipes(incIngredients, excIngredients, diet, allergies, matchType, callback) {\r\n    const queryObject = {\r\n      ing: incIngredients\r\n    }\r\n    if (excIngredients.length > 0) queryObject.ingexc = excIngredients;\r\n    if (diet != null) queryObject.diet = diet;\r\n    if (allergies.length > 0) queryObject.allergy = allergies;\r\n\r\n    if (matchType === \"Atleast\" || matchType === \"Atmost\")\r\n      queryObject.match = matchType\r\n    \r\n    this.queryRecipesWithObject(queryObject, callback)\r\n  }\r\n\r\n  static queryRecipesWithObject(queryObject, callback) {\r\n    const recipesAPI = \"https://recipe-guru.appspot.com/api/v1/recipes\"\r\n\r\n    let queryString = qs.stringify(queryObject, {arrayFormat: \"bracket\"})\r\n    $.getJSON(recipesAPI + \"?\" + queryString, (data) => callback(data))\r\n  }\r\n}\r\n\r\nexport default Dataset;","import React, { Component } from 'react';\r\nimport './Recipe.css';\r\nimport Dataset from './Dataset.js';\r\n\r\nexport class Recipe extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let recipe = {\r\n      calories: 0,\r\n      categories: [],\r\n      directions: [],\r\n      fat: 0,\r\n      id: 0,\r\n      ingredients: [],\r\n      protein: 0,\r\n      rating: 0,\r\n      sodium: 0,\r\n      title: \"\"\r\n    }\r\n    this.state = recipe\r\n  }\r\n\r\n  componentDidMount() {\r\n    Dataset.getRecipe(this.props.id, (data) => this.setState(data))\r\n  }\r\n\r\n  render() {\r\n    const directionItems = this.state.directions.map(\r\n      (direction, index) => <li className=\"recipeListItem\" key={index}>{direction}</li>\r\n    );\r\n    const ingredientItems = this.state.ingredients.map(\r\n      (ingredient, index) => <li className=\"recipeListItem\" key={index}>{ingredient}</li>\r\n    );\r\n    return (\r\n      <div>\r\n        <div id=\"recipe\">\r\n          <div id=\"recipeHeader\" className=\"card\">\r\n            <img src={ require('./logo.png') } alt=\"logo\" id=\"headerLogo\" height=\"100\" width=\"100\"/>\r\n            <h1 id=\"recipeName\">{this.state.title}</h1>\r\n            <Rating rating={this.state.rating}/>\r\n          </div>\r\n          <div className=\"card recipeList\">\r\n            <h2 className=\"recipeSubHeading\">Ingredients</h2>\r\n            <hr></hr>\r\n            <ul>{ingredientItems}</ul>\r\n          </div>\r\n          <div className=\"card recipeList\">\r\n            <h2 className=\"recipeSubHeading\">Directions</h2>\r\n            <hr></hr>\r\n            <ol>{directionItems}</ol>\r\n          </div>\r\n          <div id=\"stats\">\r\n            <StatBox heading=\"Calories\" value={this.state.calories} />\r\n            <StatBox heading=\"Fat\" value={this.state.fat} />\r\n            <StatBox heading=\"Sodium\" value={this.state.sodium} />\r\n            <StatBox heading=\"Protein\" value={this.state.protein} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Rating(props) {\r\n  let rating = \"\"\r\n  for (let index = 0; index < Math.round(props.rating); index++) {\r\n    rating = rating + \"\\u2605\"\r\n  }\r\n  return <p id=\"recipeRating\">Rating: {rating}</p>\r\n}\r\n\r\nfunction StatBox(props) {\r\n  return (\r\n    <span className=\"card statBox\">\r\n      <div className=\"statHeading\"><h3>{props.heading}</h3></div>\r\n      <hr></hr>\r\n      <div className=\"statValue\"><p>{props.value}</p></div>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Recipe;","import React, { Component } from 'react';\r\nimport './Results.css';\r\nimport Dataset from './Dataset.js';\r\n\r\nexport class Results extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      results: [],\r\n      diet: \"None\",\r\n      caloriesMax: \"\",\r\n      fatMax: \"\",\r\n      sodiumMax: \"\",\r\n      proteinMax: \"\",\r\n      allergy: {\r\n        Diary: false,\r\n        Gluten: false,\r\n        Fish: false,\r\n        Nuts: false,\r\n        Shellfish: false\r\n      },\r\n      percentage: \"0\",\r\n      rating: \"0\"\r\n    };\r\n  }\r\n\r\n  updateRecipes() {\r\n    let allergies = Object.keys(this.state.allergy).filter(val => this.state.allergy[val] === true)\r\n\r\n    Dataset.queryRecipes(\r\n      this.props._query.ing ? this.props._query.ing : [],\r\n      this.props._query.ingexc ? this.props._query.ingexc : [],\r\n      this.state.diet === \"None\" ? null : this.state.diet,\r\n      allergies,\r\n      \"Atleast\",\r\n      (data) => {\r\n        data.sort((a,b) => b.percentage - a.percentage)\r\n        const filtered = data.filter(recipe => {\r\n          return (this.state.caloriesMax === \"\" || recipe.calories < +this.state.caloriesMax) &&\r\n                  (this.state.fatMax === \"\" || recipe.fat < +this.state.fatMax) &&\r\n                  (this.state.sodiumMax === \"\" || recipe.sodium < +this.state.sodiumMax) &&\r\n                  (this.state.proteinMax === \"\" || recipe.protein < +this.state.proteinMax) &&\r\n                  (recipe.percentage > (+this.state.percentage) * 10) &&\r\n                  (recipe.rating >= +this.state.rating) \r\n        })\r\n        this.setState({results: filtered});\r\n      }\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateRecipes()\r\n  }\r\n\r\n  createCards = () => {\r\n    const cards = this.state.results.map((recipe, index) => \r\n      <Card id={recipe.id.toString()}\r\n            title={recipe.title}\r\n            percentage={recipe.percentage}\r\n            required={recipe.unmatched.length}\r\n            key={recipe.id}></Card>\r\n    );\r\n\r\n    const rows = []\r\n\r\n    if (cards.length === 0) {\r\n      rows.push( <h2>No Results Found</h2> )\r\n    }\r\n    else {\r\n      rows.push( <h2>Showing {cards.length} Results</h2> )\r\n    }\r\n    \r\n    for (let i = 0; i < cards.length; i = i + 4) {\r\n      rows.push(<div className=\"row\">{cards.slice(i, i+4)}</div>)\r\n      rows.push(<br></br>)\r\n    }\r\n\r\n    return rows\r\n  }\r\n\r\n  setDiet(e) {\r\n    this.setState({diet: e.target.value})\r\n  }\r\n\r\n  setAllergy(e) {\r\n    let newAllergies = this.state.allergy;\r\n    newAllergies[e.target.value] = !newAllergies[e.target.value]\r\n    this.setState({allergy: newAllergies})\r\n    console.log(e.target);\r\n  }\r\n\r\n  setPercentage(e) {\r\n    console.log(e.target.value);\r\n    this.setState({percentage: e.target.value})\r\n  }\r\n\r\n  setRating(e) {\r\n    console.log(e.target.value);\r\n    this.setState({rating: e.target.value})\r\n  }\r\n\r\n  setMax(val, maxType) {\r\n    const regex = new RegExp(\"^[0-9]+$\");\r\n    const newValue = val.match(regex) ? val : \"\";\r\n    this.setState({[maxType]: newValue}, () => console.log(this.state[maxType]));\r\n  }\r\n  \r\n  applyFilter() {\r\n    this.updateRecipes()\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <link rel=\"stylesheet\" href=\"Results.css\" />\r\n        <div className=\"filterPanel\">\r\n          <img src={ require('./logo.png') } id=\"rgLogo\" alt=\"Recipe Guru\"></img>\r\n          <h3 id=\"filterTitle\">Filter Results</h3>\r\n            \r\n          <button onClick={this.applyFilter.bind(this)}\r\n                  className=\"card filterCard\" id=\"applyButton\">Apply Filter</button>\r\n\r\n          <div className=\"staticCard filterCard\">\r\n            <h4 className=\"filterSubtitle\">Percentage Match</h4>\r\n            <input type=\"range\" className=\"percentageSlider\" min=\"0\" max=\"10\" value={this.state.percentage} onChange={this.setPercentage.bind(this)}/>\r\n            <p className=\"filterText\">At least {(+this.state.percentage) * 10}%</p>\r\n          </div>\r\n            \r\n          <div className=\"staticCard filterCard\">\r\n            <h4 className=\"filterSubtitle\">Diet</h4>\r\n            <div onChange={this.setDiet.bind(this)}>\r\n              <input type=\"radio\" name=\"Diet\" value=\"None\" /> <label className=\"filterText\"> None </label> <br></br>\r\n              <input type=\"radio\" name=\"Diet\" value=\"Vgn\" /><label className=\"filterText\"> Vegan</label> <br></br>\r\n              <input type=\"radio\" name=\"Diet\" value=\"Vgt\" /> <label className=\"filterText\"> Vegetarian</label>  <br></br>\r\n              <input type=\"radio\" name=\"Diet\" value=\"Pesc\" /> <label className=\"filterText\"> Pescatarian</label> <br></br>\r\n            </div>\r\n          </div>\r\n            \r\n          <div className=\"staticCard filterCard\">\r\n            <h4 className=\"filterSubtitle\">Allergy</h4>\r\n            <div onChange={this.setAllergy.bind(this)}>\r\n              <input type=\"checkbox\" name=\"Allergy\" value=\"Dairy\" /> <label className=\"filterText\"> Dairy </label> <br></br>\r\n              <input type=\"checkbox\" name=\"Allergy\" value=\"Gluten\" /> <label className=\"filterText\"> Gluten </label> <br></br>\r\n              <input type=\"checkbox\" name=\"Allergy\" value=\"Fish\" /> <label className=\"filterText\"> Fish </label> <br></br>\r\n              <input type=\"checkbox\" name=\"Allergy\" value=\"Nuts\" /> <label className=\"filterText\"> Nuts </label> <br></br>\r\n              <input type=\"checkbox\" name=\"Allergy\" value=\"Shellfish\" /> <label className=\"filterText\"> Shellfish </label> <br></br>\r\n            </div>\r\n          </div>\r\n\r\n          <StatFilterCard name=\"Calories\" unit=\" calories\"\r\n                          onChange={(e) => this.setMax(e.target.value, \"caloriesMax\")}\r\n                          value={this.state.caloriesMax}/>\r\n          <StatFilterCard name=\"Fat\" unit=\" grams\"\r\n                          onChange={(e) => this.setMax(e.target.value, \"fatMax\")}\r\n                          value={this.state.fatMax}/>\r\n          <StatFilterCard name=\"Sodium\" unit=\" milligrams\"\r\n                          onChange={(e) => this.setMax(e.target.value, \"sodiumMax\")}\r\n                          value={this.state.sodiumMax}/>\r\n          <StatFilterCard name=\"Protein\" unit=\" grams\"\r\n                          onChange={(e) => this.setMax(e.target.value, \"proteinMax\")}\r\n                          value={this.state.proteinMax}/>\r\n\r\n          <div className=\"staticCard filterCard\">\r\n            <h4 className=\"filterSubtitle\">Rating</h4>\r\n            <input type=\"range\" className=\"percentageSlider\" min=\"0\" max=\"5\" value={this.state.rating} onChange={this.setRating.bind(this)}/>\r\n            <p className=\"filterText\">At least {this.state.rating}/5</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className = \"results\">\r\n          <h2 id=\"resultsTitle\">\r\n            Results\r\n          </h2>\r\n          {this.createCards()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction StatFilterCard(props) {\r\n  return (\r\n    <div className=\"staticCard filterCard\">\r\n      <h4 className=\"filterSubtitle\">{props.name}</h4>\r\n      <p className=\"filterText\">\r\n        {\"Less than \"}\r\n        <input  type=\"number\"\r\n                className=\"numberSlider\"\r\n                onChange={props.onChange}\r\n                value={props.value}/>\r\n        {props.unit}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Card(props) {\r\n  const recipeLink = () => {\r\n    window.location.href = \"/recipe/\" + props.id;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"column\">\r\n        <button className=\"card\" style={{border: \"none\"}} onClick={() => recipeLink()}>\r\n          <h4 className=\"recipeName\"><b>{props.title}</b></h4>\r\n          <hr></hr>\r\n          <p className=\"percentage\">{props.percentage}%</p>\r\n          <p className=\"requiredIng\">Requires <b>{props.required}</b> more ingredients</p>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Results","import React from 'react';\r\n\r\n\r\nclass SignUp extends React.Component {\r\n\r\n  \r\n    goGuru() {\r\n      window.location.href = \"/\";\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div style={{width: \"100%\"}}>\r\n            <img src={ require('./logo.png') } alt=\"logo\" height=\"200\" width=\"200\" style={{display: \"block\", margin: \"auto\" }}/>\r\n          </div>\r\n          <h1 id=\"arTitle\">404 - Page Not Found</h1>\r\n          <p style={{textAlign: \"center\"}}>\r\n            The page you are looking for cannot be found, please use the following link to return to the home page: \r\n          </p>\r\n          <div id=\"goGuru\">\r\n            <button type=\"button\" id=\"submit\" className=\"card\"\r\n                    onClick={() => this.goGuru()}>GO GURU!</button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default SignUp;\r\n","import React, { Component } from 'react';\r\nimport Router from 'react-router-component';\r\nimport Toggle from 'react-toggle';\r\nimport \"react-toggle/style.css\"\r\nimport * as qs from 'query-string';\r\n\r\nimport './style.css';\r\nimport Recipe from './Recipe.js'\r\nimport Results from './Results.js'\r\nimport Dataset from './Dataset'\r\nimport ErrorPage from './404Error'\r\n\r\nvar Locations = Router.Locations;\r\nvar Location = Router.Location;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Locations>\r\n        <Location path='/' handler={SearchHome} />\r\n        <Location path='/recipe/:id' handler={Recipe} />\r\n        <Location path='/results' handler={Results} />\r\n        <Location path='*' handler={ErrorPage}/>\r\n      </Locations>\r\n    )\r\n  }\r\n}\r\n\r\nclass SearchHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ingredients: [],\r\n      matchedIngredients: [],\r\n      includedIngredients: [],\r\n      excludedIngredients: [],\r\n      input: \"\",\r\n      selected: false,\r\n      exclude: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Dataset.getIngredients((data) => {\r\n      //const items = data.map((val, i) => {return {id: i, value: val}})\r\n      this.setState({ingredients: data})\r\n    })\r\n  }\r\n\r\n  textChanged(e) {\r\n    const inputRegex = new RegExp(e.target.value, \"i\")\r\n    const matchingIng = e.target.value === \"\" ? [] : this.state.ingredients.filter((ingredient) => {\r\n      return ingredient.match(inputRegex)\r\n    })\r\n    this.setState({\r\n      input: e.target.value,\r\n      matchedIngredients: matchingIng\r\n    });\r\n  }\r\n\r\n  suggestionSelected(suggestion) {\r\n    if (!this.state.exclude) {\r\n      this.setState({\r\n        includedIngredients: this.state.includedIngredients.concat([suggestion])\r\n      })\r\n    } else {\r\n      this.setState({\r\n        excludedIngredients: this.state.excludedIngredients.concat([suggestion])\r\n      })\r\n    }\r\n    this.setState({\r\n      input: \"\",\r\n      matchedIngredients: []\r\n    })\r\n  }\r\n\r\n  removeIngredient(ingredient, listType) {\r\n\r\n    if (listType === \"inclusion\") {\r\n      let list = this.state.includedIngredients;\r\n      list = list.filter(ing => ing !== ingredient)\r\n      this.setState({includedIngredients: list})\r\n    } else {\r\n      let list = this.state.excludedIngredients;\r\n      list = list.filter(ing => ing !== ingredient)\r\n      this.setState({excludedIngredients: list})\r\n    }\r\n  }\r\n\r\n  toggleFocus() {\r\n    this.setState({selected: !this.state.selected})\r\n  }\r\n\r\n  toggleInclusion() {\r\n    this.setState({exclude: !this.state.exclude});\r\n  }\r\n\r\n  goGuru() {\r\n    const queryParams = {\r\n      ing: this.state.includedIngredients,\r\n      ingexc: this.state.excludedIngredients\r\n    }\r\n    const queryString = qs.stringify(queryParams, {arrayFormat: \"bracket\"});\r\n    window.location.href = \"/results?\" + queryString;\r\n  }\r\n \r\n  \r\n\r\n  render() {\r\n    let incIngr = this.state.includedIngredients.map(ing => {\r\n      return <ListCard key={ing} ing={ing} type=\"inclusion\" remove={() => this.removeIngredient(ing, \"inclusion\") }/>\r\n    })\r\n    let excIngr = this.state.excludedIngredients.map(ing => {\r\n      return <ListCard key={ing} ing={ing} type=\"exclusion\" remove={() => this.removeIngredient(ing, \"exclusion\") }/>\r\n    })\r\n    let suggestedIngredients = this.state.matchedIngredients.map(ing => {\r\n      return (\r\n          <li key={ing}\r\n              className=\"suggestedItem\"\r\n              onClick={() => this.suggestionSelected(ing)}>{ing}</li>)\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <link rel=\"stylesheet\" href=\"style.css\" />\r\n        <title>Recipe Guru</title>\r\n        <div style={{width: \"100%\"}}>\r\n          <img src={ require('./logo.png') } alt=\"logo\" height=\"200\" width=\"200\" style={{display: \"block\", margin: \"auto\" }}/>\r\n        </div>\r\n        <h1 id=\"arTitle\">Recipe Guru</h1>\r\n        {/*Search for ingredients search box + Add Ingredient button*/}\r\n        <div id=\"ingredientSearch\" className=\"card\">\r\n          <div>\r\n            <input id=\"searchField\" type=\"text\" placeholder=\"Search for ingredients...\" size={20} \r\n                  onChange={this.textChanged.bind(this)}\r\n                  onFocus={() => this.toggleFocus()}\r\n                  onBlur={() => this.toggleFocus()}\r\n                  value={this.state.input}/>\r\n            <hr></hr>\r\n            <label>\r\n              <Toggle \r\n                defaultChecked={!this.state.exclude}\r\n                onChange={() => this.toggleInclusion()}\r\n                icons={false}/>\r\n              <span id=\"inclusionToggle\">{this.state.exclude ? \"exclude mode\" : \"include mode\"}</span>\r\n            </label>\r\n          </div>\r\n          {this.state.matchedIngredients.length > 0\r\n           ? <hr></hr> : <div></div>}\r\n          <ul id=\"suggestedIng\">\r\n            {suggestedIngredients}\r\n          </ul>\r\n        </div>\r\n          {this.state.includedIngredients.length === 0 ? <div></div> :\r\n            <div style={{textAlign: \"center\"}}>\r\n              <h2 className=\"listLabel\">Included Ingredients</h2>\r\n              <div style={{width:\"60%\", overflowX:\"hidden\", marginLeft: \"auto\", marginRight: \"auto\"}}>{incIngr}</div>\r\n            </div>\r\n          }\r\n          {this.state.excludedIngredients.length === 0 ? <div></div> :\r\n            <div style={{textAlign: \"center\"}}>\r\n              <h2 className=\"listLabel\">Excluded Ingredients</h2>\r\n              <div style={{width:\"60%\", overflowX:\"hidden\", marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n                {excIngr}\r\n              </div>\r\n            </div>\r\n          }\r\n        \r\n        <div id=\"goGuru\">\r\n          <button type=\"button\" id=\"submit\" className=\"card\"\r\n                  onClick={() => this.goGuru()}>GO GURU!</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ListCard(props) {\r\n  const style = props.type === \"inclusion\" ? \"inclusionCard listcard\" : \"exclusionCard listcard\";\r\n  const buttonStyle = props.type === \"inclusion\" ? \" cardButton inclusionCardButton\" : \" cardButton exclusionCardButton\"\r\n\r\n  return (\r\n    <div key={props.ing} className={style}>\r\n        <p>{props.ing}</p>\r\n        <button className={buttonStyle} onClick={props.remove}>Remove</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}